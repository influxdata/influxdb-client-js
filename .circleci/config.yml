version: 2.1

commands:
  init-dependencies:
    steps:
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-v2-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-v2-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs:
  tests:
    parameters:
      image:
        type: string
        default: &default-image "cimg/node:14.17.6"
    docker:
      - image: << parameters.image >>
    steps:
      - checkout
      - init-dependencies
      - run:
          name: Run tests
          command: |
            yarn build
            yarn test:ci
            yarn apidoc:ci
      # Upload results
      - store_test_results:
          path: ./reports
  coverage:
    parameters:
    docker:
      - image: *default-image
    steps:
      - checkout
      - init-dependencies
      - run:
          name: Runs tests with coverage
          command: |
            yarn --version
            yarn run coverage:ci
            yarn run coverage:send
      - run:
          name: Report test results to codecov
          command: yarn run coverage:send
      - store_artifacts:
          path: ./packages/core/coverage

  deploy-preview:
    parameters:
    docker:
      - image: *default-image
    steps:
      - run:
          name: Early return if this build is from a forked repository
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME != "influxdata" ]]; then
              echo "Nothing to do for forked repositories, so marking this step successful"
              circleci step halt
            fi
      - checkout
      - init-dependencies
      - run:
          name: Setup npmjs
          command: bash .circleci/setup-npmjs.sh
      - run:
          name: Build & Deploy nightly version
          command: bash .circleci/deploy-nightly-version.sh

workflows:
  build:
    jobs:
      - tests:
          filters:
            branches:
              ignore: gh-pages
      - coverage:
          filters:
            branches:
              ignore: gh-pages
      - deploy-preview:
          requires:
            - tests
            - coverage
          filters:
            branches:
              only: master
