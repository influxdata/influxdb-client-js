import Auth from './wrappers/auth';
import Authorizations from './wrappers/authorizations';
import Buckets from './wrappers/buckets';
import Dashboards from './wrappers/dashboards';
import Labels from './wrappers/labels';
import Links from './wrappers/links';
import Organizations from './wrappers/organizations';
import Queries from './wrappers/queries';
import Scrapers from './wrappers/scrapers';
import Setup from './wrappers/setup';
import Sources from './wrappers/sources';
import Tasks from './wrappers/tasks';
import TelegrafConfigs from './wrappers/telegrafConfigs';
import Users from './wrappers/users';
import Variables from './wrappers/variables';
import Write from './wrappers/write';
import Templates from './wrappers/templates';
export * from './api';
export * from './types';
export { ArrayExpression, BadStatement, BinaryExpression, Block, BooleanLiteral, BuiltinStatement, CallExpression, ConditionalExpression, DateTimeLiteral, Duration, DurationLiteral, Expression, ExpressionStatement, FloatLiteral, FunctionExpression, Identifier, ImportDeclaration, IndexExpression, IntegerLiteral, LogicalExpression, MemberAssignment, MemberExpression, Node, ObjectExpression, OptionStatement, Package, PackageClause, PipeExpression, PipeLiteral, Property, PropertyKey, RegexpLiteral, ReturnStatement, Statement, StringLiteral, UnaryExpression, UnsignedIntegerLiteral, VariableAssignment, } from './types/ast';
export default class Client {
    auth: Auth;
    authorizations: Authorizations;
    buckets: Buckets;
    dashboards: Dashboards;
    labels: Labels;
    links: Links;
    organizations: Organizations;
    queries: Queries;
    scrapers: Scrapers;
    setup: Setup;
    sources: Sources;
    tasks: Tasks;
    telegrafConfigs: TelegrafConfigs;
    users: Users;
    variables: Variables;
    write: Write;
    templates: Templates;
    constructor(basePath: string);
}
