[
  {
    "server": "/api/v2",
    "path": "/signin",
    "operation": "post",
    "operationId": "PostSignin",
    "basicAuth": true,
    "summary": "Create a user session.",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Success. User authenticated.",
        "mediaTypes": []
      },
      {
        "code": "401",
        "description": "Unauthorized access.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "403",
        "description": "User account is disabled.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unsuccessful authentication.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/signout",
    "operation": "post",
    "operationId": "PostSignout",
    "basicAuth": false,
    "summary": "Expire the current UI session",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Session successfully expired",
        "mediaTypes": []
      },
      {
        "code": "401",
        "description": "Unauthorized access",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unsuccessful session expiry",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/ping",
    "operation": "get",
    "operationId": "GetPing",
    "basicAuth": false,
    "summary": "Get the status and version of the instance",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "OK.\nHeaders contain InfluxDB version information.\n",
        "mediaTypes": []
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/",
    "operation": "get",
    "operationId": "GetRoutes",
    "basicAuth": false,
    "summary": "List all top level routes",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "default",
        "description": "All routes",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Routes"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dbrps",
    "operation": "get",
    "operationId": "GetDBRPs",
    "basicAuth": false,
    "summary": "List database retention policy mappings",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "orgID",
        "description": "Specifies the organization ID to filter on",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Specifies the organization name to filter on",
        "type": "string"
      },
      {
        "name": "id",
        "description": "Specifies the mapping ID to filter on",
        "type": "string"
      },
      {
        "name": "bucketID",
        "description": "Specifies the bucket ID to filter on",
        "type": "string"
      },
      {
        "name": "default",
        "description": "Specifies filtering on default",
        "type": "any"
      },
      {
        "name": "db",
        "description": "Specifies the database to filter on",
        "type": "string"
      },
      {
        "name": "rp",
        "description": "Specifies the retention policy to filter on",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Success. Returns a list of database retention policy mappings.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "DBRPs"
          }
        ]
      },
      {
        "code": "400",
        "description": "Bad request. The request has one or more invalid parameters.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dbrps",
    "operation": "post",
    "operationId": "PostDBRP",
    "basicAuth": false,
    "summary": "Add a database retention policy mapping",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "The database retention policy mapping to add",
      "required": true,
      "mediaType": "application/json",
      "type": "DBRPCreate"
    },
    "responses": [
      {
        "code": "201",
        "description": "Created. Returns the created database retention policy mapping.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "DBRP"
          }
        ]
      },
      {
        "code": "400",
        "description": "Bad request. The mapping in the request has one or more invalid IDs.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dbrps/{dbrpID}",
    "operation": "get",
    "operationId": "GetDBRPsID",
    "basicAuth": false,
    "summary": "Retrieve a database retention policy mapping",
    "positionalParams": [
      {
        "name": "dbrpID",
        "description": "The database retention policy mapping ID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "orgID",
        "description": "Specifies the organization ID of the mapping",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Specifies the organization name of the mapping",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The database retention policy requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "DBRPGet"
          }
        ]
      },
      {
        "code": "400",
        "description": "if any of the IDs passed is invalid",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dbrps/{dbrpID}",
    "operation": "patch",
    "operationId": "PatchDBRPID",
    "basicAuth": false,
    "summary": "Update a database retention policy mapping",
    "positionalParams": [
      {
        "name": "dbrpID",
        "description": "The database retention policy mapping.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "orgID",
        "description": "Specifies the organization ID of the mapping",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Specifies the organization name of the mapping",
        "type": "string"
      }
    ],
    "bodyParam": {
      "description": "Database retention policy update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "DBRPUpdate"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated mapping",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "DBRPGet"
          }
        ]
      },
      {
        "code": "400",
        "description": "if any of the IDs passed is invalid",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "404",
        "description": "The mapping was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dbrps/{dbrpID}",
    "operation": "delete",
    "operationId": "DeleteDBRPID",
    "basicAuth": false,
    "summary": "Delete a database retention policy",
    "positionalParams": [
      {
        "name": "dbrpID",
        "description": "The database retention policy mapping",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "orgID",
        "description": "Specifies the organization ID of the mapping",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Specifies the organization name of the mapping",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "400",
        "description": "if any of the IDs passed is invalid",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegraf/plugins",
    "operation": "get",
    "operationId": "GetTelegrafPlugins",
    "basicAuth": false,
    "summary": "List all Telegraf plugins",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "type",
        "description": "The type of plugin desired.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of Telegraf plugins.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "TelegrafPlugins"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs",
    "operation": "get",
    "operationId": "GetTelegrafs",
    "basicAuth": false,
    "summary": "List all Telegraf configurations",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "orgID",
        "description": "The organization ID the Telegraf config belongs to.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of Telegraf configurations",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Telegrafs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs",
    "operation": "post",
    "operationId": "PostTelegrafs",
    "basicAuth": false,
    "summary": "Create a Telegraf configuration",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Telegraf configuration to create",
      "required": true,
      "mediaType": "application/json",
      "type": "TelegrafPluginRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Telegraf configuration created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Telegraf"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}",
    "operation": "get",
    "operationId": "GetTelegrafsID",
    "basicAuth": false,
    "summary": "Retrieve a Telegraf configuration",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf configuration ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Accept",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Telegraf configuration details",
        "mediaTypes": [
          {
            "mediaType": "application/toml",
            "type": "string"
          },
          {
            "mediaType": "application/json",
            "type": "Telegraf"
          },
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}",
    "operation": "put",
    "operationId": "PutTelegrafsID",
    "basicAuth": false,
    "summary": "Update a Telegraf configuration",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Telegraf configuration update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "TelegrafPluginRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated Telegraf configurations",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Telegraf"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}",
    "operation": "delete",
    "operationId": "DeleteTelegrafsID",
    "basicAuth": false,
    "summary": "Delete a Telegraf configuration",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf configuration ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/labels",
    "operation": "get",
    "operationId": "GetTelegrafsIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a Telegraf config",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/labels",
    "operation": "post",
    "operationId": "PostTelegrafsIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label added to the Telegraf config",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteTelegrafsIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Telegraf config not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/members",
    "operation": "get",
    "operationId": "GetTelegrafsIDMembers",
    "basicAuth": false,
    "summary": "List all users with member privileges for a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of Telegraf config members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/members",
    "operation": "post",
    "operationId": "PostTelegrafsIDMembers",
    "basicAuth": false,
    "summary": "Add a member to a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Member added to Telegraf config",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteTelegrafsIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from a Telegraf config",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/owners",
    "operation": "get",
    "operationId": "GetTelegrafsIDOwners",
    "basicAuth": false,
    "summary": "List all owners of a Telegraf configuration",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf configuration ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Returns Telegraf configuration owners as a ResourceOwners list",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/owners",
    "operation": "post",
    "operationId": "PostTelegrafsIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to a Telegraf configuration",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf configuration ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Telegraf configuration owner was added. Returns a ResourceOwner that references the User.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteTelegrafsIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from a Telegraf config",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}/labels",
    "operation": "get",
    "operationId": "GetVariablesIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a variable",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}/labels",
    "operation": "post",
    "operationId": "PostVariablesIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The newly added label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteVariablesIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Variable not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/write",
    "operation": "post",
    "operationId": "PostWrite",
    "basicAuth": false,
    "summary": "Write data",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Content-Encoding",
        "description": "The compression applied to the line protocol in the request payload.\nTo send a GZIP payload, pass `Content-Encoding: gzip` header.\n",
        "type": "string"
      },
      {
        "name": "Content-Type",
        "description": "The format of the data in the request body.\nTo send a line protocol payload, pass `Content-Type: text/plain; charset=utf-8`.\n",
        "type": "string"
      },
      {
        "name": "Content-Length",
        "description": "The size of the entity-body, in bytes, sent to InfluxDB.\nIf the length is greater than the `max body` configuration option,\nthe server responds with status code `413`.\n",
        "type": "number"
      },
      {
        "name": "Accept",
        "description": "The content type that the client can understand.\nWrites only return a response body if they fail--for example,\ndue to a formatting problem or quota limit.\n\n#### InfluxDB Cloud\n\n  - Returns only `application/json` for format and limit errors.\n  - Returns only `text/html` for some quota limit errors.\n\n#### InfluxDB OSS\n\n  - Returns only `application/json` for format and limit errors.\n\n#### Related guides\n  - [Troubleshoot issues writing data](https://docs.influxdata.com/influxdb/v2.2/write-data/troubleshoot/).\n",
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "The destination organization for writes.\nThe database writes all points in the batch to this organization.\nIf you provide both `orgID` and `org` parameters, `org` takes precedence.\n",
        "required": true,
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "The ID of the destination organization for writes.\nIf both `orgID` and `org` are specified, `org` takes precedence.\n",
        "type": "string"
      },
      {
        "name": "bucket",
        "description": "The destination bucket for writes.",
        "required": true,
        "type": "string"
      },
      {
        "name": "precision",
        "description": "The precision for unix timestamps in the line protocol batch.",
        "type": "any"
      }
    ],
    "bodyParam": {
      "description": "Data in line protocol format.\n\nTo send compressed data, do the following:\n\n  1. Use [GZIP](https://www.gzip.org/) to compress the line protocol data.\n  2. In your request, send the compressed data and the\n     `Content-Encoding: gzip` header.\n\n#### Related guides\n\n- [Best practices for optimizing writes](https://docs.influxdata.com/influxdb/v2.2/write-data/best-practices/optimize-writes/).\n",
      "required": true,
      "mediaType": "text/plain",
      "type": "string"
    },
    "responses": [
      {
        "code": "204",
        "description": "Success. InfluxDB validated the request and the data format and\naccepted the data for writing to the bucket.\nBecause data is written to InfluxDB asynchronously, data may not yet be written to a bucket.\n\n#### Related guides\n\n- [How to check for write errors](https://docs.influxdata.com/influxdb/v2.2/write-data/troubleshoot/).\n",
        "mediaTypes": []
      },
      {
        "code": "400",
        "description": "Bad request. The line protocol data in the request is malformed.\nThe response body contains the first malformed line in the data.\nInfluxDB rejected the batch and did not write any data.\n",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LineProtocolError"
          }
        ]
      },
      {
        "code": "401",
        "description": "Unauthorized. The error may indicate one of the following:\n  * The `Authorization: Token` header is missing or malformed.\n  * The API token value is missing from the header.\n  * The token does not have sufficient permissions to write to this organization and bucket.\n",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "404",
        "description": "Not found. A requested resource was not found. The response body contains the requested resource type, e.g. `organization name` or `bucket`, and name.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "413",
        "description": "The request payload is too large.\nInfluxDB rejected the batch and did not write any data.\n\n#### InfluxDB Cloud:\n\n - Returns this error if the payload exceeds the 50MB size limit.\n - Returns `Content-Type: text/html` for this error.\n\n#### InfluxDB OSS:\n\n - Returns this error only if the [Go (golang) `ioutil.ReadAll()`](https://pkg.go.dev/io/ioutil#ReadAll) function raises an error.\n - Returns `Content-Type: application/json` for this error.\n",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LineProtocolLengthError"
          },
          {
            "mediaType": "text/html",
            "type": "string"
          }
        ]
      },
      {
        "code": "429",
        "description": "Too many requests.\n\n#### InfluxDB Cloud\n\n  - Returns this error if a **read** or **write** request exceeds your\n    plan's [adjustable service quotas](https://docs.influxdata.com/influxdb/cloud/account-management/limits/#adjustable-service-quotas)\n    or if a **delete** request exceeds the maximum\n    [global limit](https://docs.influxdata.com/influxdb/cloud/account-management/limits/#global-limits).\n  - Returns `Retry-After` header that describes when to try the write again.\n\n#### InfluxDB OSS\n\n  - Doesn't return this error.\n",
        "mediaTypes": []
      },
      {
        "code": "500",
        "description": "Internal server error.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "503",
        "description": "Service unavailable.\n\n#### InfluxDB Cloud\n\n  - Returns this error if series cardinality exceeds your plan's\n    [adjustable service quotas](https://docs.influxdata.com/influxdb/cloud/account-management/limits/#adjustable-service-quotas).\n    See [how to resolve high series cardinality](https://docs.influxdata.com/influxdb/v2.2/write-data/best-practices/resolve-high-cardinality/).\n\n#### InfluxDB OSS\n\n  - Returns this error if\n    the server is temporarily unavailable to accept writes.\n  - Returns `Retry-After` header that describes when to try the write again.\n",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/delete",
    "operation": "post",
    "operationId": "PostDelete",
    "basicAuth": false,
    "summary": "Delete data",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "Specifies the organization to delete data from.",
        "type": "string"
      },
      {
        "name": "bucket",
        "description": "Specifies the bucket to delete data from.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Specifies the organization ID of the resource.",
        "type": "string"
      },
      {
        "name": "bucketID",
        "description": "Specifies the bucket ID to delete data from.",
        "type": "string"
      }
    ],
    "bodyParam": {
      "description": "Deletes data from an InfluxDB bucket.",
      "required": true,
      "mediaType": "application/json",
      "type": "DeletePredicateRequest"
    },
    "responses": [
      {
        "code": "204",
        "description": "delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "400",
        "description": "Invalid request.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "403",
        "description": "no token was sent or does not have sufficient permissions.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "404",
        "description": "the bucket or organization is not found.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/labels",
    "operation": "get",
    "operationId": "GetLabels",
    "basicAuth": false,
    "summary": "List all labels",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of labels",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/labels",
    "operation": "post",
    "operationId": "PostLabels",
    "basicAuth": false,
    "summary": "Create a label",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to create",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelCreateRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/labels/{labelID}",
    "operation": "get",
    "operationId": "GetLabelsID",
    "basicAuth": false,
    "summary": "Retrieve a label",
    "positionalParams": [
      {
        "name": "labelID",
        "description": "The ID of the label to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/labels/{labelID}",
    "operation": "patch",
    "operationId": "PatchLabelsID",
    "basicAuth": false,
    "summary": "Update a label",
    "positionalParams": [
      {
        "name": "labelID",
        "description": "The ID of the label to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label update",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelUpdate"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "404",
        "description": "Label not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteLabelsID",
    "basicAuth": false,
    "summary": "Delete a label",
    "positionalParams": [
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Label not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}",
    "operation": "get",
    "operationId": "GetDashboardsID",
    "basicAuth": false,
    "summary": "Retrieve a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "include",
        "description": "If `properties`, includes the cell view properties in the response.",
        "required": false,
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Retrieve a single dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Dashboard | DashboardWithViewProperties"
          }
        ]
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}",
    "operation": "patch",
    "operationId": "PatchDashboardsID",
    "basicAuth": false,
    "summary": "Update a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Patching of a dashboard",
      "required": true,
      "mediaType": "application/json",
      "type": "{\n  /** optional, when provided will replace the name */\n  name?: string;\n  /** optional, when provided will replace the description */\n  description?: string;\n  /** optional, when provided will replace all existing cells with the cells provided */\n  cells?: CellWithViewProperties;\n}"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Dashboard"
          }
        ]
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}",
    "operation": "delete",
    "operationId": "DeleteDashboardsID",
    "basicAuth": false,
    "summary": "Delete a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells",
    "operation": "post",
    "operationId": "PostDashboardsIDCells",
    "basicAuth": false,
    "summary": "Create a dashboard cell",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Cell that will be added",
      "required": true,
      "mediaType": "application/json",
      "type": "CreateCell"
    },
    "responses": [
      {
        "code": "201",
        "description": "Cell successfully added",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Cell"
          }
        ]
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells",
    "operation": "put",
    "operationId": "PutDashboardsIDCells",
    "basicAuth": false,
    "summary": "Replace cells in a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "Cells"
    },
    "responses": [
      {
        "code": "201",
        "description": "Replaced dashboard cells",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Dashboard"
          }
        ]
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells/{cellID}",
    "operation": "patch",
    "operationId": "PatchDashboardsIDCellsID",
    "basicAuth": false,
    "summary": "Update the non-positional information related to a cell",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      },
      {
        "name": "cellID",
        "description": "The ID of the cell to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "CellUpdate"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated dashboard cell",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Cell"
          }
        ]
      },
      {
        "code": "404",
        "description": "Cell or dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells/{cellID}",
    "operation": "delete",
    "operationId": "DeleteDashboardsIDCellsID",
    "basicAuth": false,
    "summary": "Delete a dashboard cell",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to delete.",
        "required": true,
        "type": "string"
      },
      {
        "name": "cellID",
        "description": "The ID of the cell to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Cell successfully deleted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Cell or dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells/{cellID}/view",
    "operation": "get",
    "operationId": "GetDashboardsIDCellsIDView",
    "basicAuth": false,
    "summary": "Retrieve the view for a cell",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "cellID",
        "description": "The cell ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A dashboard cells view",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "View"
          }
        ]
      },
      {
        "code": "404",
        "description": "Cell or dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells/{cellID}/view",
    "operation": "patch",
    "operationId": "PatchDashboardsIDCellsIDView",
    "basicAuth": false,
    "summary": "Update the view for a cell",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      },
      {
        "name": "cellID",
        "description": "The ID of the cell to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "View"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated cell view",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "View"
          }
        ]
      },
      {
        "code": "404",
        "description": "Cell or dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/labels",
    "operation": "get",
    "operationId": "GetDashboardsIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/labels",
    "operation": "post",
    "operationId": "PostDashboardsIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label added to the dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteDashboardsIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/members",
    "operation": "get",
    "operationId": "GetDashboardsIDMembers",
    "basicAuth": false,
    "summary": "List all dashboard members",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of users who have member privileges for a dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/members",
    "operation": "post",
    "operationId": "PostDashboardsIDMembers",
    "basicAuth": false,
    "summary": "Add a member to a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added to dashboard members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteDashboardsIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from a dashboard",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/owners",
    "operation": "get",
    "operationId": "GetDashboardsIDOwners",
    "basicAuth": false,
    "summary": "List all dashboard owners",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of users who have owner privileges for a dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/owners",
    "operation": "post",
    "operationId": "PostDashboardsIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added to dashboard owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteDashboardsIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from a dashboard",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/query/ast",
    "operation": "post",
    "operationId": "PostQueryAst",
    "basicAuth": false,
    "summary": "Generate an Abstract Syntax Tree (AST) from a query",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Content-Type",
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Analyzed Flux query to generate abstract syntax tree.",
      "required": false,
      "mediaType": "application/json",
      "type": "LanguageRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "Abstract syntax tree of the flux query.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ASTResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Any response other than 200 is an internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/query/suggestions",
    "operation": "get",
    "operationId": "GetQuerySuggestions",
    "basicAuth": false,
    "summary": "Retrieve query suggestions",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Suggestions for next functions in call chain",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "FluxSuggestions"
          }
        ]
      },
      {
        "code": "default",
        "description": "Any response other than 200 is an internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/query/suggestions/{name}",
    "operation": "get",
    "operationId": "GetQuerySuggestionsName",
    "basicAuth": false,
    "summary": "Retrieve query suggestions for a branching suggestion",
    "positionalParams": [
      {
        "name": "name",
        "description": "The name of the branching suggestion.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Suggestions for next functions in call chain",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "FluxSuggestion"
          }
        ]
      },
      {
        "code": "default",
        "description": "Any response other than 200 is an internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/query/analyze",
    "operation": "post",
    "operationId": "PostQueryAnalyze",
    "basicAuth": false,
    "summary": "Analyze a Flux query",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Content-Type",
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Flux query to analyze",
      "required": false,
      "mediaType": "application/json",
      "type": "Query"
    },
    "responses": [
      {
        "code": "200",
        "description": "Query analyze results. Errors will be empty if the query is valid.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "AnalyzeQueryResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/query",
    "operation": "post",
    "operationId": "PostQuery",
    "basicAuth": false,
    "summary": "Query data",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Accept-Encoding",
        "description": "Indicates the content encoding (usually a compression algorithm) that the client can understand.",
        "type": "string"
      },
      {
        "name": "Content-Type",
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "Name of the organization executing the query. Accepts either the ID or Name. If you provide both `orgID` and `org`, `org` takes precedence.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "ID of the organization executing the query. If you provide both `orgID` and `org`, `org` takes precedence.",
        "type": "string"
      }
    ],
    "bodyParam": {
      "description": "Flux query or specification to execute",
      "required": false,
      "mediaType": "application/json",
      "type": "Query"
    },
    "responses": [
      {
        "code": "200",
        "description": "Success. Returns query results.",
        "mediaTypes": [
          {
            "mediaType": "text/csv",
            "type": "string"
          }
        ]
      },
      {
        "code": "429",
        "description": "#### InfluxDB Cloud:\n  - returns this error if a **read** or **write** request exceeds your\n    plan's [adjustable service quotas](https://docs.influxdata.com/influxdb/v2.2/account-management/limits/#adjustable-service-quotas)\n    or if a **delete** request exceeds the maximum\n    [global limit](https://docs.influxdata.com/influxdb/v2.2/account-management/limits/#global-limits)\n  - returns `Retry-After` header that describes when to try the write again.\n\n#### InfluxDB OSS:\n  - doesn't return this error.\n",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Error processing query",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets",
    "operation": "get",
    "operationId": "GetBuckets",
    "basicAuth": false,
    "summary": "List all buckets",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "after",
        "description": "Resource ID to seek from. Results are not inclusive of this ID. Use `after` instead of `offset`.\n",
        "required": false,
        "type": "string"
      },
      {
        "name": "org",
        "description": "The name of the organization.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "The organization ID.",
        "type": "string"
      },
      {
        "name": "name",
        "description": "Only returns buckets with a specific name.",
        "type": "string"
      },
      {
        "name": "id",
        "description": "Only returns buckets with a specific ID.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of buckets",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Buckets"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets",
    "operation": "post",
    "operationId": "PostBuckets",
    "basicAuth": false,
    "summary": "Create a bucket",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Bucket to create",
      "required": true,
      "mediaType": "application/json",
      "type": "PostBucketRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Bucket created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Bucket"
          }
        ]
      },
      {
        "code": "422",
        "description": "Request body failed validation",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}",
    "operation": "get",
    "operationId": "GetBucketsID",
    "basicAuth": false,
    "summary": "Retrieve a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Bucket details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Bucket"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}",
    "operation": "patch",
    "operationId": "PatchBucketsID",
    "basicAuth": false,
    "summary": "Update a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Bucket update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "PatchBucketRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated bucket",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Bucket"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}",
    "operation": "delete",
    "operationId": "DeleteBucketsID",
    "basicAuth": false,
    "summary": "Delete a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The ID of the bucket to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Bucket not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/labels",
    "operation": "get",
    "operationId": "GetBucketsIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a bucket",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/labels",
    "operation": "post",
    "operationId": "PostBucketsIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The newly added label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteBucketsIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Bucket not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/members",
    "operation": "get",
    "operationId": "GetBucketsIDMembers",
    "basicAuth": false,
    "summary": "List all users with member privileges for a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of bucket members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/members",
    "operation": "post",
    "operationId": "PostBucketsIDMembers",
    "basicAuth": false,
    "summary": "Add a member to a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Member added to bucket",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteBucketsIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from a bucket",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/owners",
    "operation": "get",
    "operationId": "GetBucketsIDOwners",
    "basicAuth": false,
    "summary": "List all owners of a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of bucket owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/owners",
    "operation": "post",
    "operationId": "PostBucketsIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Bucket owner added",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteBucketsIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from a bucket",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs",
    "operation": "get",
    "operationId": "GetOrgs",
    "basicAuth": false,
    "summary": "List all organizations",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "descending",
        "required": false,
        "type": "any"
      },
      {
        "name": "org",
        "description": "Filter organizations to a specific organization name.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Filter organizations to a specific organization ID.",
        "type": "string"
      },
      {
        "name": "userID",
        "description": "Filter organizations to a specific user ID.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of organizations",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Organizations"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs",
    "operation": "post",
    "operationId": "PostOrgs",
    "basicAuth": false,
    "summary": "Create an organization",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Organization to create",
      "required": true,
      "mediaType": "application/json",
      "type": "PostOrganizationRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Organization created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Organization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}",
    "operation": "get",
    "operationId": "GetOrgsID",
    "basicAuth": false,
    "summary": "Retrieve an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The ID of the organization to get.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Organization details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Organization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}",
    "operation": "patch",
    "operationId": "PatchOrgsID",
    "basicAuth": false,
    "summary": "Update an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The ID of the organization to get.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Organization update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "PatchOrganizationRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "Organization updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Organization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}",
    "operation": "delete",
    "operationId": "DeleteOrgsID",
    "basicAuth": false,
    "summary": "Delete an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The ID of the organization to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Organization not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/secrets",
    "operation": "get",
    "operationId": "GetOrgsIDSecrets",
    "basicAuth": false,
    "summary": "List all secret keys for an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all secret keys",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "SecretKeysResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/secrets",
    "operation": "patch",
    "operationId": "PatchOrgsIDSecrets",
    "basicAuth": false,
    "summary": "Update secrets in an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Secret key value pairs to update/add",
      "required": true,
      "mediaType": "application/json",
      "type": "Secrets"
    },
    "responses": [
      {
        "code": "204",
        "description": "Keys successfully patched",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/members",
    "operation": "get",
    "operationId": "GetOrgsIDMembers",
    "basicAuth": false,
    "summary": "List all members of an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of organization members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "404",
        "description": "Organization not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/members",
    "operation": "post",
    "operationId": "PostOrgsIDMembers",
    "basicAuth": false,
    "summary": "Add a member to an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added to organization created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteOrgsIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from an organization",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/owners",
    "operation": "get",
    "operationId": "GetOrgsIDOwners",
    "basicAuth": false,
    "summary": "List all owners of an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of organization owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "404",
        "description": "Organization not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/owners",
    "operation": "post",
    "operationId": "PostOrgsIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Organization owner added",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteOrgsIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from an organization",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/secrets/delete",
    "operation": "post",
    "operationId": "PostOrgsIDSecrets",
    "basicAuth": false,
    "summary": "Delete secrets from an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Secret key to delete",
      "required": true,
      "mediaType": "application/json",
      "type": "SecretKeys"
    },
    "responses": [
      {
        "code": "204",
        "description": "Keys successfully patched",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/secrets/{secretID}",
    "operation": "delete",
    "operationId": "DeleteOrgsIDSecretsID",
    "basicAuth": false,
    "summary": "Delete a secret from an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "secretID",
        "description": "The secret ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Keys successfully deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/resources",
    "operation": "get",
    "operationId": "GetResources",
    "basicAuth": false,
    "summary": "List all known resources",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All resources targets",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "string[]"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/stacks",
    "operation": "get",
    "operationId": "ListStacks",
    "basicAuth": false,
    "summary": "List installed templates",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [
      {
        "name": "orgID",
        "description": "The organization ID of the stacks",
        "required": true,
        "type": "string"
      },
      {
        "name": "name",
        "description": "A collection of names to filter the list by.",
        "type": "string"
      },
      {
        "name": "stackID",
        "description": "A collection of stackIDs to filter the list by.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Success. Returns the list of stacks.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "{\n  stacks?: Stack[];\n}"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/stacks",
    "operation": "post",
    "operationId": "CreateStack",
    "basicAuth": false,
    "summary": "Create a new stack",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "The stack to create.",
      "required": true,
      "mediaType": "application/json",
      "type": "{\n  orgID?: string;\n  name?: string;\n  description?: string;\n  urls?: string[];\n}"
    },
    "responses": [
      {
        "code": "201",
        "description": "Success. Returns the newly created stack.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Stack"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/stacks/{stack_id}",
    "operation": "get",
    "operationId": "ReadStack",
    "basicAuth": false,
    "summary": "Retrieve a stack",
    "positionalParams": [
      {
        "name": "stack_id",
        "description": "The identifier of the stack.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Returns the stack.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Stack"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/stacks/{stack_id}",
    "operation": "patch",
    "operationId": "UpdateStack",
    "basicAuth": false,
    "summary": "Update a stack",
    "positionalParams": [
      {
        "name": "stack_id",
        "description": "The identifier of the stack.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "The stack to update.",
      "required": true,
      "mediaType": "application/json",
      "type": "{\n  name?: string;\n  description?: string;\n  templateURLs?: string[];\n  additionalResources?: Array<{\n  resourceID: string;\n  kind: string;\n  templateMetaName?: string;\n}>;\n}"
    },
    "responses": [
      {
        "code": "200",
        "description": "Returns the updated stack.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Stack"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/stacks/{stack_id}",
    "operation": "delete",
    "operationId": "DeleteStack",
    "basicAuth": false,
    "summary": "Delete a stack and associated resources",
    "positionalParams": [
      {
        "name": "stack_id",
        "description": "The identifier of the stack.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [],
    "queryParams": [
      {
        "name": "orgID",
        "description": "The identifier of the organization.",
        "required": true,
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "The stack and its associated resources were deleted.",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/stacks/{stack_id}/uninstall",
    "operation": "post",
    "operationId": "UninstallStack",
    "basicAuth": false,
    "summary": "Uninstall a stack",
    "positionalParams": [
      {
        "name": "stack_id",
        "description": "The identifier of the stack.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Returns the uninstalled stack.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Stack"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/templates/apply",
    "operation": "post",
    "operationId": "ApplyTemplate",
    "basicAuth": false,
    "summary": "Apply or dry-run a template",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "TemplateApply"
    },
    "responses": [
      {
        "code": "200",
        "description": "Success. The package dry-run succeeded. No new resources were created. Returns a diff and summary of the dry-run. The diff and summary won't contain IDs for resources that didn't exist at the time of the dry-run.\n",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "TemplateSummary"
          }
        ]
      },
      {
        "code": "201",
        "description": "Success. The package applied successfully. Returns a diff and summary of the run. The summary contains newly created resources. The diff compares the initial state to the state after the package applied. This corresponds to `\"dryRun\": true`.\n",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "TemplateSummary"
          }
        ]
      },
      {
        "code": "422",
        "description": "Template failed validation",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "TemplateSummary & {\n  message: string;\n  code: string;\n}"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/templates/export",
    "operation": "post",
    "operationId": "ExportTemplate",
    "basicAuth": false,
    "summary": "Export a new template",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Export resources as an InfluxDB template.",
      "required": false,
      "mediaType": "application/json",
      "type": "TemplateExportByID | TemplateExportByName"
    },
    "responses": [
      {
        "code": "200",
        "description": "The template was created successfully. Returns the newly created template.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Template"
          },
          {
            "mediaType": "application/x-yaml",
            "type": "Template"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}",
    "operation": "get",
    "operationId": "GetTasksID",
    "basicAuth": false,
    "summary": "Retrieve a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Task details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Task"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}",
    "operation": "patch",
    "operationId": "PatchTasksID",
    "basicAuth": false,
    "summary": "Update a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Task update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "TaskUpdateRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "Task updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Task"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}",
    "operation": "delete",
    "operationId": "DeleteTasksID",
    "basicAuth": false,
    "summary": "Delete a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The ID of the task to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Task deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs",
    "operation": "get",
    "operationId": "GetTasksIDRuns",
    "basicAuth": false,
    "summary": "List runs for a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The ID of the task to get runs for.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "after",
        "description": "Returns runs after a specific ID.",
        "type": "string"
      },
      {
        "name": "limit",
        "description": "The number of runs to return",
        "type": "number"
      },
      {
        "name": "afterTime",
        "description": "Filter runs to those scheduled after this time, RFC3339",
        "type": "string"
      },
      {
        "name": "beforeTime",
        "description": "Filter runs to those scheduled before this time, RFC3339",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of task runs",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Runs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs",
    "operation": "post",
    "operationId": "PostTasksIDRuns",
    "basicAuth": false,
    "summary": "Manually start a task run, overriding the current schedule",
    "positionalParams": [
      {
        "name": "taskID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": false,
      "mediaType": "application/json",
      "type": "RunManually"
    },
    "responses": [
      {
        "code": "201",
        "description": "Run scheduled to start",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Run"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs/{runID}",
    "operation": "get",
    "operationId": "GetTasksIDRunsID",
    "basicAuth": false,
    "summary": "Retrieve a single run for a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "runID",
        "description": "The run ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The run record",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Run"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs/{runID}",
    "operation": "delete",
    "operationId": "DeleteTasksIDRunsID",
    "basicAuth": false,
    "summary": "Cancel a running task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "runID",
        "description": "The run ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs/{runID}/retry",
    "operation": "post",
    "operationId": "PostTasksIDRunsIDRetry",
    "basicAuth": false,
    "summary": "Retry a task run",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "runID",
        "description": "The run ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": false,
      "mediaType": "application/json; charset=utf-8",
      "type": "any"
    },
    "responses": [
      {
        "code": "200",
        "description": "Run that has been queued",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Run"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/logs",
    "operation": "get",
    "operationId": "GetTasksIDLogs",
    "basicAuth": false,
    "summary": "Retrieve all logs for a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All logs for a task",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Logs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs/{runID}/logs",
    "operation": "get",
    "operationId": "GetTasksIDRunsIDLogs",
    "basicAuth": false,
    "summary": "Retrieve all logs for a run",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "ID of task to get logs for.",
        "required": true,
        "type": "string"
      },
      {
        "name": "runID",
        "description": "ID of run to get logs for.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All logs for a run",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Logs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/labels",
    "operation": "get",
    "operationId": "GetTasksIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a task",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/labels",
    "operation": "post",
    "operationId": "PostTasksIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "A list of all labels for a task",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteTasksIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Task not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/flags",
    "operation": "get",
    "operationId": "GetFlags",
    "basicAuth": false,
    "summary": "Return the feature flags for the currently authenticated user",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Feature flags for the currently authenticated user",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Flags"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/me",
    "operation": "get",
    "operationId": "GetMe",
    "basicAuth": false,
    "summary": "Retrieve the currently authenticated user",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The currently authenticated user.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "UserResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/me/password",
    "operation": "put",
    "operationId": "PutMePassword",
    "basicAuth": true,
    "summary": "Update a password",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "New password",
      "required": true,
      "mediaType": "application/json",
      "type": "PasswordResetBody"
    },
    "responses": [
      {
        "code": "204",
        "description": "Password successfully updated",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unsuccessful authentication",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/members",
    "operation": "get",
    "operationId": "GetTasksIDMembers",
    "basicAuth": false,
    "summary": "List all task members",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of users who have member privileges for a task",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/members",
    "operation": "post",
    "operationId": "PostTasksIDMembers",
    "basicAuth": false,
    "summary": "Add a member to a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added to task members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteTasksIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from a task",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/owners",
    "operation": "get",
    "operationId": "GetTasksIDOwners",
    "basicAuth": false,
    "summary": "List all owners of a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of users who have owner privileges for a task",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/owners",
    "operation": "post",
    "operationId": "PostTasksIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added to task owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteTasksIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from a task",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users/{userID}/password",
    "operation": "post",
    "operationId": "PostUsersIDPassword",
    "basicAuth": true,
    "summary": "Update a password",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The user ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "New password",
      "required": true,
      "mediaType": "application/json",
      "type": "PasswordResetBody"
    },
    "responses": [
      {
        "code": "204",
        "description": "Password successfully updated",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unsuccessful authentication",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks",
    "operation": "get",
    "operationId": "GetChecks",
    "basicAuth": false,
    "summary": "List all checks",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "orgID",
        "description": "Only show checks that belong to a specific organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of checks",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Checks"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks",
    "operation": "post",
    "operationId": "CreateCheck",
    "basicAuth": false,
    "summary": "Add new check",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Check to create",
      "required": true,
      "mediaType": "application/json",
      "type": "PostCheck"
    },
    "responses": [
      {
        "code": "201",
        "description": "Check created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Check"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}",
    "operation": "get",
    "operationId": "GetChecksID",
    "basicAuth": false,
    "summary": "Retrieve a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The check requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Check"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}",
    "operation": "put",
    "operationId": "PutChecksID",
    "basicAuth": false,
    "summary": "Update a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Check update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "Check"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated check",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Check"
          }
        ]
      },
      {
        "code": "404",
        "description": "The check was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}",
    "operation": "patch",
    "operationId": "PatchChecksID",
    "basicAuth": false,
    "summary": "Update a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Check update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "CheckPatch"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated check",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Check"
          }
        ]
      },
      {
        "code": "404",
        "description": "The check was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}",
    "operation": "delete",
    "operationId": "DeleteChecksID",
    "basicAuth": false,
    "summary": "Delete a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "The check was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}/labels",
    "operation": "get",
    "operationId": "GetChecksIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a check",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}/labels",
    "operation": "post",
    "operationId": "PostChecksIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label was added to the check",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteChecksIDLabelsID",
    "basicAuth": false,
    "summary": "Delete label from a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Check or label not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules",
    "operation": "get",
    "operationId": "GetNotificationRules",
    "basicAuth": false,
    "summary": "List all notification rules",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "orgID",
        "description": "Only show notification rules that belong to a specific organization ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "checkID",
        "description": "Only show notifications that belong to the specific check ID.",
        "type": "string"
      },
      {
        "name": "tag",
        "description": "Only return notification rules that \"would match\" statuses which contain the tag key value pairs provided.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of notification rules",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationRules"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules",
    "operation": "post",
    "operationId": "CreateNotificationRule",
    "basicAuth": false,
    "summary": "Add a notification rule",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Notification rule to create",
      "required": true,
      "mediaType": "application/json",
      "type": "PostNotificationRule"
    },
    "responses": [
      {
        "code": "201",
        "description": "Notification rule created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationRule"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}/query",
    "operation": "get",
    "operationId": "GetChecksIDQuery",
    "basicAuth": false,
    "summary": "Retrieve a check query",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The check query requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "FluxResponse"
          }
        ]
      },
      {
        "code": "400",
        "description": "Invalid request",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "404",
        "description": "Check not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}",
    "operation": "get",
    "operationId": "GetNotificationRulesID",
    "basicAuth": false,
    "summary": "Retrieve a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The notification rule requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationRule"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}",
    "operation": "put",
    "operationId": "PutNotificationRulesID",
    "basicAuth": false,
    "summary": "Update a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Notification rule update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "NotificationRule"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated notification rule",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationRule"
          }
        ]
      },
      {
        "code": "404",
        "description": "The notification rule was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}",
    "operation": "patch",
    "operationId": "PatchNotificationRulesID",
    "basicAuth": false,
    "summary": "Update a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Notification rule update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "NotificationRuleUpdate"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated notification rule",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationRule"
          }
        ]
      },
      {
        "code": "404",
        "description": "The notification rule was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}",
    "operation": "delete",
    "operationId": "DeleteNotificationRulesID",
    "basicAuth": false,
    "summary": "Delete a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "The check was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}/labels",
    "operation": "get",
    "operationId": "GetNotificationRulesIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a notification rule",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}/labels",
    "operation": "post",
    "operationId": "PostNotificationRuleIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label was added to the notification rule",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteNotificationRulesIDLabelsID",
    "basicAuth": false,
    "summary": "Delete label from a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Rule or label not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}/query",
    "operation": "get",
    "operationId": "GetNotificationRulesIDQuery",
    "basicAuth": false,
    "summary": "Retrieve a notification rule query",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The notification rule query requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "FluxResponse"
          }
        ]
      },
      {
        "code": "400",
        "description": "Invalid request",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "404",
        "description": "Notification rule not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints",
    "operation": "get",
    "operationId": "GetNotificationEndpoints",
    "basicAuth": false,
    "summary": "List all notification endpoints",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "orgID",
        "description": "Only show notification endpoints that belong to specific organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of notification endpoints",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationEndpoints"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints",
    "operation": "post",
    "operationId": "CreateNotificationEndpoint",
    "basicAuth": false,
    "summary": "Add a notification endpoint",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Notification endpoint to create",
      "required": true,
      "mediaType": "application/json",
      "type": "PostNotificationEndpoint"
    },
    "responses": [
      {
        "code": "201",
        "description": "Notification endpoint created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationEndpoint"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}",
    "operation": "get",
    "operationId": "GetNotificationEndpointsID",
    "basicAuth": false,
    "summary": "Retrieve a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The notification endpoint requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationEndpoint"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}",
    "operation": "put",
    "operationId": "PutNotificationEndpointsID",
    "basicAuth": false,
    "summary": "Update a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "A new notification endpoint to replace the existing endpoint with",
      "required": true,
      "mediaType": "application/json",
      "type": "NotificationEndpoint"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated notification endpoint",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationEndpoint"
          }
        ]
      },
      {
        "code": "404",
        "description": "The notification endpoint was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}",
    "operation": "patch",
    "operationId": "PatchNotificationEndpointsID",
    "basicAuth": false,
    "summary": "Update a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Check update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "NotificationEndpointUpdate"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated notification endpoint",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationEndpoint"
          }
        ]
      },
      {
        "code": "404",
        "description": "The notification endpoint was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}",
    "operation": "delete",
    "operationId": "DeleteNotificationEndpointsID",
    "basicAuth": false,
    "summary": "Delete a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "The endpoint was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}/labels",
    "operation": "get",
    "operationId": "GetNotificationEndpointsIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a notification endpoint",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}/labels",
    "operation": "post",
    "operationId": "PostNotificationEndpointIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label was added to the notification endpoint",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteNotificationEndpointsIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Endpoint or label not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/debug/pprof/all",
    "operation": "get",
    "operationId": "GetDebugPprofAllProfiles",
    "basicAuth": false,
    "summary": "Retrieve all runtime profiles",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "cpu",
        "description": "Collects and returns CPU profiling data for the specified [duration](https://docs.influxdata.com/influxdb/v2.2/reference/glossary/#duration).\n",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "[Go runtime profile](https://pkg.go.dev/runtime/pprof) reports.\n",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/debug/pprof/allocs",
    "operation": "get",
    "operationId": "GetDebugPprofAllocs",
    "basicAuth": false,
    "summary": "Retrieve the memory allocations runtime profile",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "debug",
        "description": "- `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n- `1`: Return a response body with the report formatted as human-readable text.\n  The report contains comments that translate addresses to function names and line numbers for debugging.\n\n`debug=1` is mutually exclusive with the `seconds` query parameter.\n",
        "type": "number"
      },
      {
        "name": "seconds",
        "description": "Number of seconds to collect statistics.\n\n`seconds` is mutually exclusive with `debug=1`.\n",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "[Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\nwith [pprof](https://github.com/google/pprof) analysis and visualization tools.\nIf debug is enabled (`?debug=1`), response body contains a human-readable profile.\n",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          },
          {
            "mediaType": "text/plain",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/debug/pprof/block",
    "operation": "get",
    "operationId": "GetDebugPprofBlock",
    "basicAuth": false,
    "summary": "Retrieve the block runtime profile",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "debug",
        "description": "- `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n- `1`: Return a response body with the report formatted as human-readable text.\n  The report contains comments that translate addresses to function names and line numbers for debugging.\n\n`debug=1` is mutually exclusive with the `seconds` query parameter.\n",
        "type": "number"
      },
      {
        "name": "seconds",
        "description": "Number of seconds to collect statistics.\n\n`seconds` is mutually exclusive with `debug=1`.\n",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "[Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\nwith [pprof](https://github.com/google/pprof) analysis and visualization tools.\nIf debug is enabled (`?debug=1`), response body contains a human-readable profile.\n",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          },
          {
            "mediaType": "text/plain",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/debug/pprof/cmdline",
    "operation": "get",
    "operationId": "GetDebugPprofCmdline",
    "basicAuth": false,
    "summary": "Retrieve the command line invocation",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Command line invocation.",
        "mediaTypes": [
          {
            "mediaType": "text/plain",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/debug/pprof/goroutine",
    "operation": "get",
    "operationId": "GetDebugPprofGoroutine",
    "basicAuth": false,
    "summary": "Retrieve the goroutines runtime profile",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "debug",
        "description": "- `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n- `1`: Return a response body with the report formatted as\n       human-readable text with comments that translate addresses to\n       function names and line numbers for debugging.\n\n`debug=1` is mutually exclusive with the `seconds` query parameter.\n",
        "type": "number"
      },
      {
        "name": "seconds",
        "description": "Number of seconds to collect statistics.\n\n`seconds` is mutually exclusive with `debug=1`.\n",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "[Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\nwith [pprof](https://github.com/google/pprof) analysis and visualization tools.\nIf debug is enabled (`?debug=1`), response body contains a human-readable profile.\n",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          },
          {
            "mediaType": "text/plain",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/debug/pprof/heap",
    "operation": "get",
    "operationId": "GetDebugPprofHeap",
    "basicAuth": false,
    "summary": "Retrieve the heap runtime profile",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "debug",
        "description": "- `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n- `1`: Return a response body with the report formatted as human-readable text.\n  The report contains comments that translate addresses to function names and line numbers for debugging.\n\n`debug=1` is mutually exclusive with the `seconds` query parameter.\n",
        "type": "number"
      },
      {
        "name": "seconds",
        "description": "Number of seconds to collect statistics.\n\n`seconds` is mutually exclusive with `debug=1`.\n",
        "type": "string"
      },
      {
        "name": "gc",
        "description": "- `0`: (Default) don't force garbage collection before sampling.\n- `1`: Force garbage collection before sampling.\n",
        "type": "number"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "[Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\nwith [pprof](https://github.com/google/pprof) analysis and visualization tools.\nIf debug is enabled (`?debug=1`), response body contains a human-readable profile.\n",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          },
          {
            "mediaType": "text/plain",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/debug/pprof/mutex",
    "operation": "get",
    "operationId": "GetDebugPprofMutex",
    "basicAuth": false,
    "summary": "Retrieve the mutual exclusion (mutex) runtime profile",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "debug",
        "description": "- `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n- `1`: Return a response body with the report formatted as human-readable text.\n  The report contains comments that translate addresses to function names and line numbers for debugging.\n\n`debug=1` is mutually exclusive with the `seconds` query parameter.\n",
        "type": "number"
      },
      {
        "name": "seconds",
        "description": "Number of seconds to collect statistics.\n\n`seconds` is mutually exclusive with `debug=1`.\n",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "[Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\nwith [pprof](https://github.com/google/pprof) analysis and visualization tools.\nIf debug is enabled (`?debug=1`), response body contains a human-readable profile.\n",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          },
          {
            "mediaType": "text/plain",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/debug/pprof/profile",
    "operation": "get",
    "operationId": "GetDebugPprofProfile",
    "basicAuth": false,
    "summary": "Retrieve the CPU runtime profile",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "seconds",
        "description": "Number of seconds to collect profile data. Default is `30` seconds.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "[Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\nwith [pprof](https://github.com/google/pprof) analysis and visualization tools.\n",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/debug/pprof/threadcreate",
    "operation": "get",
    "operationId": "GetDebugPprofThreadCreate",
    "basicAuth": false,
    "summary": "Retrieve the threadcreate runtime profile",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "debug",
        "description": "- `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n- `1`: Return a response body with the report formatted as human-readable text.\n  The report contains comments that translate addresses to function names and line numbers for debugging.\n\n`debug=1` is mutually exclusive with the `seconds` query parameter.\n",
        "type": "number"
      },
      {
        "name": "seconds",
        "description": "Number of seconds to collect statistics.\n\n`seconds` is mutually exclusive with `debug=1`.\n",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "[Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\nwith [pprof](https://github.com/google/pprof) analysis and visualization tools.\nIf debug is enabled (`?debug=1`), response body contains a human-readable profile.\n",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          },
          {
            "mediaType": "text/plain",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/debug/pprof/trace",
    "operation": "get",
    "operationId": "GetDebugPprofTrace",
    "basicAuth": false,
    "summary": "Retrieve the runtime execution trace",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "seconds",
        "description": "Number of seconds to collect profile data.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "[Trace file](https://pkg.go.dev/runtime/trace) compatible\nwith the [Golang `trace` command](https://pkg.go.dev/cmd/trace).\n",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/health",
    "operation": "get",
    "operationId": "GetHealth",
    "basicAuth": false,
    "summary": "Retrieve the health of the instance",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The instance is healthy.\nThe response body contains the health check items and status.\n",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "HealthCheck"
          }
        ]
      },
      {
        "code": "503",
        "description": "The instance is unhealthy.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "HealthCheck"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/metrics",
    "operation": "get",
    "operationId": "GetMetrics",
    "basicAuth": false,
    "summary": "Retrieve workload performance metrics",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Success. The response body contains metrics in\n[Prometheus plain-text exposition format](https://prometheus.io/docs/instrumenting/exposition_formats)\nMetrics contain a name, an optional set of key-value pairs, and a value.\n\nThe following descriptors precede each metric:\n\n- `HELP`: description of the metric\n- `TYPE`: [Prometheus metric type](https://prometheus.io/docs/concepts/metric_types/) (`counter`, `gauge`, `histogram`, or `summary`)\n",
        "mediaTypes": [
          {
            "mediaType": "text/plain",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/ready",
    "operation": "get",
    "operationId": "GetReady",
    "basicAuth": false,
    "summary": "Get the readiness of an instance at startup",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The instance is ready",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Ready"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users",
    "operation": "get",
    "operationId": "GetUsers",
    "basicAuth": false,
    "summary": "List all users",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "after",
        "description": "Resource ID to seek from. Results are not inclusive of this ID. Use `after` instead of `offset`.\n",
        "required": false,
        "type": "string"
      },
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "id",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of users",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Users"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users",
    "operation": "post",
    "operationId": "PostUsers",
    "basicAuth": false,
    "summary": "Create a user",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to create",
      "required": true,
      "mediaType": "application/json",
      "type": "User"
    },
    "responses": [
      {
        "code": "201",
        "description": "User created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "UserResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users/{userID}",
    "operation": "get",
    "operationId": "GetUsersID",
    "basicAuth": false,
    "summary": "Retrieve a user",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The user ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "User details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "UserResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users/{userID}",
    "operation": "patch",
    "operationId": "PatchUsersID",
    "basicAuth": false,
    "summary": "Update a user",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the user to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "User"
    },
    "responses": [
      {
        "code": "200",
        "description": "User updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "UserResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users/{userID}",
    "operation": "delete",
    "operationId": "DeleteUsersID",
    "basicAuth": false,
    "summary": "Delete a user",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the user to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "User deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/setup",
    "operation": "get",
    "operationId": "GetSetup",
    "basicAuth": false,
    "summary": "Check if database has default user, org, bucket",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "allowed true or false",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "IsOnboarding"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/setup",
    "operation": "post",
    "operationId": "PostSetup",
    "basicAuth": false,
    "summary": "Set up initial user, org and bucket",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Source to create",
      "required": true,
      "mediaType": "application/json",
      "type": "OnboardingRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Created default user, bucket, org",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "OnboardingResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/authorizations",
    "operation": "get",
    "operationId": "GetAuthorizations",
    "basicAuth": false,
    "summary": "List all authorizations",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "userID",
        "description": "Only show authorizations that belong to a user ID.",
        "type": "string"
      },
      {
        "name": "user",
        "description": "Only show authorizations that belong to a user name.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Only show authorizations that belong to an organization ID.",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Only show authorizations that belong to a organization name.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of authorizations",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorizations"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/authorizations",
    "operation": "post",
    "operationId": "PostAuthorizations",
    "basicAuth": false,
    "summary": "Create an authorization",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Authorization to create",
      "required": true,
      "mediaType": "application/json",
      "type": "AuthorizationPostRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Authorization created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorization"
          }
        ]
      },
      {
        "code": "400",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/authorizations/{authID}",
    "operation": "get",
    "operationId": "GetAuthorizationsID",
    "basicAuth": false,
    "summary": "Retrieve an authorization",
    "positionalParams": [
      {
        "name": "authID",
        "description": "The ID of the authorization to get.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Authorization details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/authorizations/{authID}",
    "operation": "patch",
    "operationId": "PatchAuthorizationsID",
    "basicAuth": false,
    "summary": "Update an authorization to be active or inactive",
    "positionalParams": [
      {
        "name": "authID",
        "description": "The ID of the authorization to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Authorization to update",
      "required": true,
      "mediaType": "application/json",
      "type": "AuthorizationUpdateRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "The active or inactive authorization",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/authorizations/{authID}",
    "operation": "delete",
    "operationId": "DeleteAuthorizationsID",
    "basicAuth": false,
    "summary": "Delete an authorization",
    "positionalParams": [
      {
        "name": "authID",
        "description": "The ID of the authorization to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Authorization deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/legacy/authorizations",
    "operation": "get",
    "operationId": "GetLegacyAuthorizations",
    "basicAuth": false,
    "summary": "List all legacy authorizations",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "userID",
        "description": "Only show legacy authorizations that belong to a user ID.",
        "type": "string"
      },
      {
        "name": "user",
        "description": "Only show legacy authorizations that belong to a user name.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Only show legacy authorizations that belong to an organization ID.",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Only show legacy authorizations that belong to a organization name.",
        "type": "string"
      },
      {
        "name": "token",
        "description": "Only show legacy authorizations with a specified token (auth name).",
        "type": "string"
      },
      {
        "name": "authID",
        "description": "Only show legacy authorizations with a specified auth ID.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of legacy authorizations",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorizations"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/legacy/authorizations",
    "operation": "post",
    "operationId": "PostLegacyAuthorizations",
    "basicAuth": false,
    "summary": "Create a legacy authorization",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Legacy authorization to create",
      "required": true,
      "mediaType": "application/json",
      "type": "LegacyAuthorizationPostRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Legacy authorization created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorization"
          }
        ]
      },
      {
        "code": "400",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/legacy/authorizations/{authID}",
    "operation": "get",
    "operationId": "GetLegacyAuthorizationsID",
    "basicAuth": false,
    "summary": "Retrieve a legacy authorization",
    "positionalParams": [
      {
        "name": "authID",
        "description": "The ID of the legacy authorization to get.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Legacy authorization details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/legacy/authorizations/{authID}",
    "operation": "patch",
    "operationId": "PatchLegacyAuthorizationsID",
    "basicAuth": false,
    "summary": "Update a legacy authorization to be active or inactive",
    "positionalParams": [
      {
        "name": "authID",
        "description": "The ID of the legacy authorization to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Legacy authorization to update",
      "required": true,
      "mediaType": "application/json",
      "type": "AuthorizationUpdateRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "The active or inactive legacy authorization",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/legacy/authorizations/{authID}",
    "operation": "delete",
    "operationId": "DeleteLegacyAuthorizationsID",
    "basicAuth": false,
    "summary": "Delete a legacy authorization",
    "positionalParams": [
      {
        "name": "authID",
        "description": "The ID of the legacy authorization to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Legacy authorization deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/legacy/authorizations/{authID}/password",
    "operation": "post",
    "operationId": "PostLegacyAuthorizationsIDPassword",
    "basicAuth": false,
    "summary": "Set a legacy authorization password",
    "positionalParams": [
      {
        "name": "authID",
        "description": "The ID of the legacy authorization to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "New password",
      "required": true,
      "mediaType": "application/json",
      "type": "PasswordResetBody"
    },
    "responses": [
      {
        "code": "204",
        "description": "Legacy authorization password set",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables",
    "operation": "get",
    "operationId": "GetVariables",
    "basicAuth": false,
    "summary": "List all variables",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "The name of the organization.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "The organization ID.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of variables for an organization",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Variables"
          }
        ]
      },
      {
        "code": "400",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables",
    "operation": "post",
    "operationId": "PostVariables",
    "basicAuth": false,
    "summary": "Create a variable",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Variable to create",
      "required": true,
      "mediaType": "application/json",
      "type": "Variable"
    },
    "responses": [
      {
        "code": "201",
        "description": "Variable created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Variable"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}",
    "operation": "get",
    "operationId": "GetVariablesID",
    "basicAuth": false,
    "summary": "Retrieve a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Variable found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Variable"
          }
        ]
      },
      {
        "code": "404",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}",
    "operation": "put",
    "operationId": "PutVariablesID",
    "basicAuth": false,
    "summary": "Replace a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Variable to replace",
      "required": true,
      "mediaType": "application/json",
      "type": "Variable"
    },
    "responses": [
      {
        "code": "200",
        "description": "Variable updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Variable"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}",
    "operation": "patch",
    "operationId": "PatchVariablesID",
    "basicAuth": false,
    "summary": "Update a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Variable update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "Variable"
    },
    "responses": [
      {
        "code": "200",
        "description": "Variable updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Variable"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}",
    "operation": "delete",
    "operationId": "DeleteVariablesID",
    "basicAuth": false,
    "summary": "Delete a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Variable deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources",
    "operation": "get",
    "operationId": "GetSources",
    "basicAuth": false,
    "summary": "List all sources",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "The name of the organization.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of sources",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Sources"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources",
    "operation": "post",
    "operationId": "PostSources",
    "basicAuth": false,
    "summary": "Create a source",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Source to create",
      "required": true,
      "mediaType": "application/json",
      "type": "Source"
    },
    "responses": [
      {
        "code": "201",
        "description": "Created Source",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Source"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources/{sourceID}",
    "operation": "get",
    "operationId": "GetSourcesID",
    "basicAuth": false,
    "summary": "Retrieve a source",
    "positionalParams": [
      {
        "name": "sourceID",
        "description": "The source ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A source",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Source"
          }
        ]
      },
      {
        "code": "404",
        "description": "Source not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources/{sourceID}",
    "operation": "patch",
    "operationId": "PatchSourcesID",
    "basicAuth": false,
    "summary": "Update a Source",
    "positionalParams": [
      {
        "name": "sourceID",
        "description": "The source ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Source update",
      "required": true,
      "mediaType": "application/json",
      "type": "Source"
    },
    "responses": [
      {
        "code": "200",
        "description": "Created Source",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Source"
          }
        ]
      },
      {
        "code": "404",
        "description": "Source not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources/{sourceID}",
    "operation": "delete",
    "operationId": "DeleteSourcesID",
    "basicAuth": false,
    "summary": "Delete a source",
    "positionalParams": [
      {
        "name": "sourceID",
        "description": "The source ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "View not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources/{sourceID}/health",
    "operation": "get",
    "operationId": "GetSourcesIDHealth",
    "basicAuth": false,
    "summary": "Get the health of a source",
    "positionalParams": [
      {
        "name": "sourceID",
        "description": "The source ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The source is healthy",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "HealthCheck"
          }
        ]
      },
      {
        "code": "503",
        "description": "The source is not healthy",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "HealthCheck"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources/{sourceID}/buckets",
    "operation": "get",
    "operationId": "GetSourcesIDBuckets",
    "basicAuth": false,
    "summary": "Get buckets in a source",
    "positionalParams": [
      {
        "name": "sourceID",
        "description": "The source ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "The name of the organization.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A source",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Buckets"
          }
        ]
      },
      {
        "code": "404",
        "description": "Source not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers",
    "operation": "get",
    "operationId": "GetScrapers",
    "basicAuth": false,
    "summary": "List all scraper targets",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "name",
        "description": "Specifies the name of the scraper target.",
        "type": "string"
      },
      {
        "name": "id",
        "description": "List of scraper target IDs to return. If both `id` and `owner` are specified, only `id` is used.",
        "type": "any"
      },
      {
        "name": "orgID",
        "description": "Specifies the organization ID of the scraper target.",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Specifies the organization name of the scraper target.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All scraper targets",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ScraperTargetResponses"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers",
    "operation": "post",
    "operationId": "PostScrapers",
    "basicAuth": false,
    "summary": "Create a scraper target",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Scraper target to create",
      "required": true,
      "mediaType": "application/json",
      "type": "ScraperTargetRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Scraper target created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ScraperTargetResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}",
    "operation": "get",
    "operationId": "GetScrapersID",
    "basicAuth": false,
    "summary": "Retrieve a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The identifier of the scraper target.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The scraper target",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ScraperTargetResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}",
    "operation": "patch",
    "operationId": "PatchScrapersID",
    "basicAuth": false,
    "summary": "Update a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The identifier of the scraper target.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Scraper target update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "ScraperTargetRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "Scraper target updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ScraperTargetResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}",
    "operation": "delete",
    "operationId": "DeleteScrapersID",
    "basicAuth": false,
    "summary": "Delete a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The identifier of the scraper target.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Scraper target deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/labels",
    "operation": "get",
    "operationId": "GetScrapersIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of labels for a scraper target.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/labels",
    "operation": "post",
    "operationId": "PostScrapersIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The newly added label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteScrapersIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Scraper target not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/members",
    "operation": "get",
    "operationId": "GetScrapersIDMembers",
    "basicAuth": false,
    "summary": "List all users with member privileges for a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of scraper target members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/members",
    "operation": "post",
    "operationId": "PostScrapersIDMembers",
    "basicAuth": false,
    "summary": "Add a member to a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Member added to scraper targets",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteScrapersIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from a scraper target",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/owners",
    "operation": "get",
    "operationId": "GetScrapersIDOwners",
    "basicAuth": false,
    "summary": "List all owners of a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of scraper target owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/owners",
    "operation": "post",
    "operationId": "PostScrapersIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Scraper target owner added",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteScrapersIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from a scraper target",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/backup/kv",
    "operation": "get",
    "operationId": "GetBackupKV",
    "basicAuth": false,
    "summary": "Download snapshot of metadata stored in the server's embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn't include metadata stored in embedded SQL.",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Snapshot of KV metadata",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/backup/metadata",
    "operation": "get",
    "operationId": "GetBackupMetadata",
    "basicAuth": false,
    "summary": "Download snapshot of all metadata in the server",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Accept-Encoding",
        "description": "Indicates the content encoding (usually a compression algorithm) that the client can understand.",
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Snapshot of metadata",
        "mediaTypes": [
          {
            "mediaType": "multipart/mixed",
            "type": "MetadataBackup"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/backup/shards/{shardID}",
    "operation": "get",
    "operationId": "GetBackupShardId",
    "basicAuth": false,
    "summary": "Download snapshot of all TSM data in a shard",
    "positionalParams": [
      {
        "name": "shardID",
        "description": "The shard ID.",
        "required": true,
        "type": "number"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Accept-Encoding",
        "description": "Indicates the content encoding (usually a compression algorithm) that the client can understand.",
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "since",
        "description": "Earliest time to include in the snapshot. RFC3339 format.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "TSM snapshot.",
        "mediaTypes": [
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          }
        ]
      },
      {
        "code": "404",
        "description": "Shard not found.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/restore/kv",
    "operation": "post",
    "operationId": "PostRestoreKV",
    "basicAuth": false,
    "summary": "Overwrite the embedded KV store on the server with a backed-up snapshot.",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Content-Encoding",
        "description": "The value tells InfluxDB what compression is applied to the line protocol in the request payload.\nTo make an API request with a GZIP payload, send `Content-Encoding: gzip` as a request header.\n",
        "type": "string"
      },
      {
        "name": "Content-Type",
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Full KV snapshot.",
      "required": true,
      "mediaType": "text/plain",
      "type": "string"
    },
    "responses": [
      {
        "code": "200",
        "description": "KV store successfully overwritten.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "{\n  /** token is the root token for the instance after restore (this is overwritten during the restore) */\n  token?: string;\n}"
          }
        ]
      },
      {
        "code": "204",
        "description": "KV store successfully overwritten.",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/restore/sql",
    "operation": "post",
    "operationId": "PostRestoreSQL",
    "basicAuth": false,
    "summary": "Overwrite the embedded SQL store on the server with a backed-up snapshot.",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Content-Encoding",
        "description": "The value tells InfluxDB what compression is applied to the line protocol in the request payload.\nTo make an API request with a GZIP payload, send `Content-Encoding: gzip` as a request header.\n",
        "type": "string"
      },
      {
        "name": "Content-Type",
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Full SQL snapshot.",
      "required": true,
      "mediaType": "text/plain",
      "type": "string"
    },
    "responses": [
      {
        "code": "204",
        "description": "SQL store successfully overwritten.",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/restore/bucket/{bucketID}",
    "operation": "post",
    "operationId": "PostRestoreBucketID",
    "basicAuth": false,
    "summary": "Overwrite storage metadata for a bucket with shard info from a backup.",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Content-Type",
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Database info serialized as protobuf.",
      "required": true,
      "mediaType": "text/plain",
      "type": "string"
    },
    "responses": [
      {
        "code": "200",
        "description": "ID mappings for shards in bucket.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/restore/bucketMetadata",
    "operation": "post",
    "operationId": "PostRestoreBucketMetadata",
    "basicAuth": false,
    "summary": "Create a new bucket pre-seeded with shard info from a backup.",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Metadata manifest for a bucket.",
      "required": true,
      "mediaType": "application/json",
      "type": "BucketMetadataManifest"
    },
    "responses": [
      {
        "code": "201",
        "description": "ID mappings for shards in new bucket.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "RestoredBucketMappings"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/restore/shards/{shardID}",
    "operation": "post",
    "operationId": "PostRestoreShardId",
    "basicAuth": false,
    "summary": "Restore a TSM snapshot into a shard.",
    "positionalParams": [
      {
        "name": "shardID",
        "description": "The shard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Content-Encoding",
        "description": "The value tells InfluxDB what compression is applied to the line protocol in the request payload.\nTo make an API request with a GZIP payload, send `Content-Encoding: gzip` as a request header.\n",
        "type": "string"
      },
      {
        "name": "Content-Type",
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "TSM snapshot.",
      "required": true,
      "mediaType": "text/plain",
      "type": "string"
    },
    "responses": [
      {
        "code": "204",
        "description": "TSM snapshot successfully restored.",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/config",
    "operation": "get",
    "operationId": "GetConfig",
    "basicAuth": false,
    "summary": "Retrieve runtime configuration",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Success.\nThe response body contains the active runtime configuration of the InfluxDB instance.\n",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Config"
          }
        ]
      },
      {
        "code": "401",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/remotes",
    "operation": "get",
    "operationId": "GetRemoteConnections",
    "basicAuth": false,
    "summary": "List all remote connections",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "remoteURL",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "List of remote connections",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "RemoteConnections"
          }
        ]
      },
      {
        "code": "404",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/remotes",
    "operation": "post",
    "operationId": "PostRemoteConnection",
    "basicAuth": false,
    "summary": "Register a new remote connection",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "RemoteConnectionCreationRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Remote connection saved",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "RemoteConnection"
          }
        ]
      },
      {
        "code": "400",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/remotes/{remoteID}",
    "operation": "get",
    "operationId": "GetRemoteConnectionByID",
    "basicAuth": false,
    "summary": "Retrieve a remote connection",
    "positionalParams": [
      {
        "name": "remoteID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Remote connection",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "RemoteConnection"
          }
        ]
      },
      {
        "code": "404",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/remotes/{remoteID}",
    "operation": "patch",
    "operationId": "PatchRemoteConnectionByID",
    "basicAuth": false,
    "summary": "Update a remote connection",
    "positionalParams": [
      {
        "name": "remoteID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "RemoteConnectionUpdateRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated information saved",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "RemoteConnection"
          }
        ]
      },
      {
        "code": "400",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "404",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/remotes/{remoteID}",
    "operation": "delete",
    "operationId": "DeleteRemoteConnectionByID",
    "basicAuth": false,
    "summary": "Delete a remote connection",
    "positionalParams": [
      {
        "name": "remoteID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Remote connection info deleted.",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/replications",
    "operation": "get",
    "operationId": "GetReplications",
    "basicAuth": false,
    "summary": "List all replications",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "remoteID",
        "type": "string"
      },
      {
        "name": "localBucketID",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "List of replications",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Replications"
          }
        ]
      },
      {
        "code": "404",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/replications",
    "operation": "post",
    "operationId": "PostReplication",
    "basicAuth": false,
    "summary": "Register a new replication",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "validate",
        "description": "If true, validate the replication, but don't save it.",
        "type": "any"
      }
    ],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "ReplicationCreationRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Replication saved",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Replication"
          }
        ]
      },
      {
        "code": "204",
        "description": "Replication validated, but not saved",
        "mediaTypes": []
      },
      {
        "code": "400",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/replications/{replicationID}",
    "operation": "get",
    "operationId": "GetReplicationByID",
    "basicAuth": false,
    "summary": "Retrieve a replication",
    "positionalParams": [
      {
        "name": "replicationID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Replication",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Replication"
          }
        ]
      },
      {
        "code": "404",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/replications/{replicationID}",
    "operation": "patch",
    "operationId": "PatchReplicationByID",
    "basicAuth": false,
    "summary": "Update a replication",
    "positionalParams": [
      {
        "name": "replicationID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "validate",
        "description": "If true, validate the updated information, but don't save it.",
        "type": "any"
      }
    ],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "ReplicationUpdateRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated information saved",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Replication"
          }
        ]
      },
      {
        "code": "204",
        "description": "Updated replication validated, but not saved",
        "mediaTypes": []
      },
      {
        "code": "400",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "404",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/replications/{replicationID}",
    "operation": "delete",
    "operationId": "DeleteReplicationByID",
    "basicAuth": false,
    "summary": "Delete a replication",
    "positionalParams": [
      {
        "name": "replicationID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Replication deleted.",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/replications/{replicationID}/validate",
    "operation": "post",
    "operationId": "PostValidateReplicationByID",
    "basicAuth": false,
    "summary": "Validate a replication",
    "positionalParams": [
      {
        "name": "replicationID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Replication is valid",
        "mediaTypes": []
      },
      {
        "code": "400",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards",
    "operation": "get",
    "operationId": "GetDashboards",
    "basicAuth": false,
    "summary": "List all dashboards",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "descending",
        "required": false,
        "type": "any"
      },
      {
        "name": "owner",
        "description": "A user identifier. Returns only dashboards where this user has the `owner` role.",
        "type": "string"
      },
      {
        "name": "sortBy",
        "description": "The column to sort by.",
        "type": "string"
      },
      {
        "name": "id",
        "description": "A list of dashboard identifiers. Returns only the listed dashboards. If both `id` and `owner` are specified, only `id` is used.",
        "type": "any"
      },
      {
        "name": "orgID",
        "description": "The identifier of the organization.",
        "type": "string"
      },
      {
        "name": "org",
        "description": "The name of the organization.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All dashboards",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Dashboards"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards",
    "operation": "post",
    "operationId": "PostDashboards",
    "basicAuth": false,
    "summary": "Create a dashboard",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Dashboard to create",
      "required": true,
      "mediaType": "application/json",
      "type": "CreateDashboardRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Dashboard | DashboardWithViewProperties"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks",
    "operation": "get",
    "operationId": "GetTasks",
    "basicAuth": false,
    "summary": "List all tasks",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "name",
        "description": "Returns task with a specific name.",
        "type": "string"
      },
      {
        "name": "after",
        "description": "Return tasks after a specified ID.",
        "type": "string"
      },
      {
        "name": "user",
        "description": "Filter tasks to a specific user ID.",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Filter tasks to a specific organization name.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Filter tasks to a specific organization ID.",
        "type": "string"
      },
      {
        "name": "status",
        "description": "Filter tasks by a status--\"inactive\" or \"active\".",
        "type": "string"
      },
      {
        "name": "limit",
        "description": "The number of tasks to return",
        "type": "number"
      },
      {
        "name": "type",
        "description": "Type of task, unset by default.",
        "required": false,
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of tasks",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Tasks"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks",
    "operation": "post",
    "operationId": "PostTasks",
    "basicAuth": false,
    "summary": "Create a new task",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Task to create",
      "required": true,
      "mediaType": "application/json",
      "type": "TaskCreateRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Task created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Task"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scripts",
    "operation": "get",
    "operationId": "GetScripts",
    "basicAuth": false,
    "summary": "List scripts",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [
      {
        "name": "limit",
        "description": "The number of scripts to return.",
        "required": false,
        "type": "number"
      },
      {
        "name": "offset",
        "description": "The offset for pagination.",
        "required": false,
        "type": "number"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The list of scripts.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Scripts"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scripts",
    "operation": "post",
    "operationId": "PostScripts",
    "basicAuth": false,
    "summary": "Create a script",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "The script to create.",
      "required": true,
      "mediaType": "application/json",
      "type": "ScriptCreateRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "The created script.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Script"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scripts/{scriptID}",
    "operation": "get",
    "operationId": "GetScriptsID",
    "basicAuth": false,
    "summary": "Retrieve a script",
    "positionalParams": [
      {
        "name": "scriptID",
        "description": "The script ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The requested script object.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Script"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scripts/{scriptID}",
    "operation": "patch",
    "operationId": "PatchScriptsID",
    "basicAuth": false,
    "summary": "Update a script",
    "positionalParams": [
      {
        "name": "scriptID",
        "description": "The script ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Script update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "ScriptUpdateRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "The updated script.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Script"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scripts/{scriptID}",
    "operation": "delete",
    "operationId": "DeleteScriptsID",
    "basicAuth": false,
    "summary": "Delete a script",
    "positionalParams": [
      {
        "name": "scriptID",
        "description": "The ID of the script to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "The script is deleted.",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scripts/{scriptID}/invoke",
    "operation": "post",
    "operationId": "PostScriptsIDInvoke",
    "basicAuth": false,
    "summary": "Invoke a script",
    "positionalParams": [
      {
        "name": "scriptID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": false,
      "mediaType": "application/json",
      "type": "ScriptInvocationParams"
    },
    "responses": [
      {
        "code": "200",
        "description": "The result of the script execution.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ScriptHTTPResponseData"
          }
        ]
      },
      {
        "code": "default",
        "description": "Non 2XX error response from server.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  }
]